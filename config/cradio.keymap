#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_en_gb_extended.h"

&mt {
	tapping-term-ms = <400>;
	flavor = "tap-preferred";
};

/ {

	combos {
		compatible = "zmk,combos";
		combo_system {
			timeout-ms = <50>;
			key-positions = <2 3 4>;
			layers = <0 5>;
			bindings = <&tog 2>;
		};
	};

	behaviors {
		lms: behavior_mo_sl {
			compatible = "zmk,behavior-hold-tap";
			label = "mo_sl";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <400>;
			bindings = <&mo>, <&to>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
&kp Q       &kp W       &kp E       &kp R       &kp T                   &kp Y       &kp U       &kp I       &kp O       &kp P
&kp A       &mt LGUI S  &mt LALT D  &kp F       &kp G                   &kp H       &kp J       &mt LALT K  &mt LGUI L  &none
&kp Z       &kp X       &kp C       &kp V       &kp B                   &kp N       &kp M       &kp COMMA   &kp DOT     &none
                                    &kp LSHIFT  &kp SPACE               &lms 1 1    &kp RCTRL
			>;
		};

		layer_NUM {
			bindings = <
&kp ESC        &kp GB_DQT         &kp GB_POUND_SIGN     &kp GB_DOLLAR   &kp GB_PERCENT        	&kp LS(N6)        &kp GB_AMPERSAND      &kp GB_STAR        		&kp DELETE        &kp BACKSPACE
&kp TAB         &kp GB_EXCL				&none      						&none    				&kp GB_GRAVE            &none     				&kp LEFT_BRACE 				&kp RIGHT_BRACE     	&none 						&kp ENTER
&none         &none         			&none         				&none         	&none                   &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS	&kp RIGHT_BRACKET &none
                                          							&none           &to 0                   &none         		&none
			>;
		};

// 		layer_SYM {
// 			bindings = <
// &kp LS(N1)               &kp LS(N2)               &kp LS(N3)               &kp LS(N4)               &kp LS(N5)                                        &kp LS(N6)               &kp LS(N7)               &kp LS(N8)               &kp LS(N9)               &kp LS(N0)
// &kp LS(LEFT_BRACKET)     &kp LS(RIGHT_BRACKET)    &kp LEFT_BRACKET         &kp RIGHT_BRACKET        &kp NON_US_HASH                                   &kp LS(APOSTROPHE)       &kp APOSTROPHE           &kp LS(SEMICOLON)        &kp SEMICOLON            &kp LS(SLASH)
// &kp LS(NON_US_BACKSLASH) &kp NON_US_BACKSLASH     &none                    &kp LS(NON_US_HASH)      &kp GRAVE                                         &kp MINUS                &kp LS(MINUS)            &kp EQUAL                &kp LS(EQUAL)            &kp SLASH
//                                                                            &none                    &none                                             &kp DEL                  &kp BACKSPACE
// 			>;
// 		};

// 		layer_NAV {
// 			bindings = <
// &kp ESCAPE       &none            &kp K_PREV       &kp K_PLAY_PAUSE &kp K_NEXT                        &kp PAGE_UP      &kp HOME         &kp END          &none            &kp PRINTSCREEN
// &none            &kp LGUI         &kp LALT         &none            &kp K_VOL_UP                      &kp LEFT_ARROW   &kp DOWN_ARROW   &kp UP_ARROW     &kp RIGHT_ARROW  &kp LSHIFT
// &none            &none            &none            &none            &kp K_VOL_DN                      &kp PAGE_DOWN    &none            &none            &none            &kp LCTRL
//                                                    &none            &none                             &none            &none
// 			>;
// 		};

// 		layer_WM {
// 			bindings = <
// &kp LG(N1)          &kp LG(N2)          &kp LG(N3)          &kp LG(N4)          &kp LG(N5)                              &kp LG(N6)          &kp LG(N7)          &kp LG(N8)          &kp LG(N9)          &kp LG(N0)
// &kp LSHIFT          &kp LG(W)           &kp LG(E)           &kp LG(V)           &kp LG(H)                               &kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(UP_ARROW)    &kp LG(RIGHT_ARROW) &none
// &kp LALT            &none               &none               &none               &none                                   &none               &none               &none               &none               &none
//                                                             &kp LG(LS(Q))       &none                                   &kp LG(D)           &kp LG(ENTER)
// 			>;
// 		};

		layer_SYS {
			bindings = <
&none        &none        &none        &none        &none                     &none        &none        &none        &none        &none
&none        &none        &none        &none        &none                     &none        &none        &none        &none        &none
&none        &none        &none        &none        &bootloader               &bootloader  &none        &none        &none        &none
                                       &none				&to 0                     &none        &none
			>;
		};

// 		layer_FUN {
// 			bindings = <
// &none      &none      &none      &none      &none                 &kp F1     &kp F2     &kp F3     &kp F4     &none
// &none      &kp LGUI   &kp LALT   &kp LSHIFT &kp LCTRL             &kp F5     &kp F6     &kp F7     &kp F8     &none
// &none      &none      &none      &none      &none                 &kp F9     &kp F10    &kp F11    &kp F12    &none
//                                  &none      &none                 &none      &none
// 			>;
// 		};

	};
};

